trigger:
  - main

resources:
  - repo: self

pool: Default

name: 0.$(Year:yyyy).$(Build.BuildId)

variables:
  DOCKER_FILE_PATH: "./"
  JDK_VERSIONS: '19.0.2-al2,21.0.5-al2'
  DD_AGENT_VERSION_JAVA19: '1.27.0'
  DD_AGENT_VERSION_JAVA21: '1.41.0'
  IMAGE_NAME: 'Test'
  HADOLINT_IMAGE: 'hadolint/hadolint:v2.12.0-debian'

stages:
  # - stage: lint
  #   displayName: lint
  #   jobs:
  #     - job: hadolint
  #       displayName: hadolint
  #       steps:
  #         - task: Bash@3
  #           displayName: hadolint
  #           inputs:
  #             targetType: inline
  #             script: |
  #               docker run --rm -i -v $(Build.SourcesDirectory):/workspace $(HADOLINT_IMAGE) hadolint /workspace/Dockerfile
  #             workingDirectory: '$(Build.SourcesDirectory)'

  - stage: build
    displayName: build
    jobs:
      - ${{ each jdk_version in split(variables.JDK_VERSIONS,',') }}:
        - job: build_jdk_${{ substring(jdk_version, 0,2) }}
          displayName: build for JDK_VERSION ${{ jdk_version }}
          variables:
            JDK_VERSION: ${{ jdk_version }}
            ${{ if startsWith(jdk_version, '19') }}:
               DD_AGENT_VERSION: '$(DD_AGENT_VERSION_JAVA19)'
            ${{ else }}:
               DD_AGENT_VERSION: '$(DD_AGENT_VERSION_JAVA21)'
          steps:
            - task: Bash@3
              displayName: git-short-sha
              inputs:
                targetType: inline
                script: |
                  set -euxo pipefail
                  GIT_COMMIT_SHORT_SHA=$(git rev-parse --short HEAD)
                  echo "##vso[task.setvariable variable=GIT_COMMIT_SHORT_SHA;]$GIT_COMMIT_SHORT_SHA"
                workingDirectory: '$(Build.SourcesDirectory)'
            - task: Bash@3
              displayName: build
              inputs:
                targetType: inline
                script: |
                  set -euxo pipefail
                  docker build \
                    --build-arg JDK_VERSION=$(JDK_VERSION) \
                    -f "$(Build.SourcesDirectory)/Dockerfile" \
                    -t "$(ECR_ENDPOINT)/$(IMAGE_NAME):$(JDK_VERSION)-$(GIT_COMMIT_SHORT_SHA)" \
                    .
                workingDirectory: '$(Build.SourcesDirectory)'
